add_library('minim')
from letter import Letter

letters = []
maxSize = 3
score = 0
def setup():
    global typeSound
    #global x
    size(600, 600)
    x= width/2
    background(220)
    textSize(32)
    
    minim = Minim(this)
    typeSound = minim.loadSample("type.mp3")
    
    
    #letters.append(Letter('a', width/2, 0, color(random(256), random(256), random(256))))
    #chs.append('a')
    #ch_x.append(width/2)
    #ch_y.append(0)
    #cols.append(color(random(256), random(256), random(256)))
    
    
def draw():
    
    
    #global ch, y
    background(220)
    
    for i in range(len(letters)):
        letters[i].display()
        letters[i].update()
        #fill(keys[i].col)
        #text(keys[i].ch, keys[i].x, keys[i].y)
        #keys[i].y += 1
    
    #if (keys[i].y > height):
        #keys[i].y = 0
        
    fill(0)
    text(score, width-100, 32)
    
    # add letters
    while(len(letters) < maxSize):
        addRandomLetter()
    
def addRandomLetter():
    letters.append(Letter(unichr(97 + random(26)), random(width-32), 0, color(random(256), random(256), random(256))))
    
    
def keyTyped():
    global score
    for i in range(len(letters)-1, -1, -1):
        if(letters[i].ch == key):
            del letters[i]
            score += 1
            typeSound.trigger()
        
    
    #print("key:" + key +"id:" + str(ord(key)))
    #if (key == ' '):
        #del letters[:]
    #elif (ord(key) >48 and ord(key) < 58):
        
    #elif (int(key) > 0 and key < 10): 
    #elif (key == '1' or key == '2' or key == '3'):
        #if (len(letters) > int(key)- 1):
            #del letters[0:int(key)]    
    #elif (key == '1'):
        #if (len(letters) > 0):
            #del letters[0]
    
    #elif (key == '2'):
        #if (len(letters) > 1):
            #del letters[0:2]
            
    #elif (key == '3'):
        #if (len(letters) > 3):
            #del letters[0:3]
            
    #else:    
        #letters.append(Letter(key, random(width), 0, color(random(256), random(256), random(256))))
    
    #global ch
    #chs.append(key)
    #ch_x.append(random(width))
    #ch_y.append(0)
    #fill(random(256), random(256), random(256))
    #cols.append(color(random(256), random(256), random(256)))
    #chs[0] = key
    
    ###########################sketcy041018
    
    
    class Key():
    
    def __init__(self, ch, x, y, col):
        self.ch = ch
        self.x = x
        self.y = y
        self.col =col
        
    def display(self):
        fill(self.col)
        text(self.ch, self.x, self.y)
        
    def update(self):
        self.y += 1
    
    if (self.y > height):
        self.y = 0
        
   ###########################key.py
   
   
   
   
   class Letter():
    
    def __init__(self, ch, x, y, col):
        self.ch = ch
        self.x = x
        self.y = y
        self.col =col
        
    def display(self):
        fill(self.col)
        text(self.ch, self.x, self.y)
        
    def update(self):
        self.y += 1
    
        if (self.y > height):
            self.y = 0
            
     ###########letter.py
   
   
